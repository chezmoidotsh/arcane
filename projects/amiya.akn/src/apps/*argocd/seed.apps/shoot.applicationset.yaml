---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/description: |
      This ApplicationSet is responsible for automatically deploying all
      configurations across all clusters configured in ArgoCD. It achieves this
      by deploying an application that, in turn, deploys two other ApplicationSets:
      one for system/cluster applications and another for applications.

    # Source reference for argocd-extension-application-map
    source-ref.argocd.argoproj.io/0.path: projects/amiya.akn/src/apps/*argocd/shoot.apps
    source-ref.argocd.argoproj.io/0.repository-url: https://github.com/chezmoidotsh/arcane.git
    source-ref.argocd.argoproj.io/0.target-revision: main
  name: shoot
spec:
  ignoreApplicationDifferences:
    - jqPathExpressions:
        - .spec.source.targetRevision
        - .spec.sources[].targetRevision
        - .spec.syncPolicy.automated
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - clusters: {}
  template:
    metadata:
      name: "{{ .name }}"
    spec:
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{ regexReplaceAll "[^a-zA-Z0-9_-]" .name "-" }}'
      info:
        - name: Description
          value: >
            This ApplicationSet is responsible for automatically deploying all
            application and configurations for the cluster {{ .name }}.
      project: seed
      sources:
        - repoURL: https://github.com/chezmoidotsh/arcane.git
          path: projects/amiya.akn/src/apps/*argocd/shoot.apps
          targetRevision: main

          kustomize:
            patches:
              # This configuration ensures that cluster metadata is included in all ApplicationSets.
              # By doing so, it enables the dynamic templating of all related applications
              # using the associated cluster metadata, improving scalability and maintainability.
              - patch: |
                  - op: add
                    path: /spec/generators/0/matrix/generators/0/list/elements/-
                    value:
                      metadata:
                        annotations:
                          {{- range $key, $value := .metadata.annotations }}
                          {{- if hasPrefix "device.tailscale.com" $key }}
                          {{ $key }}: {{ $value | quote }}
                          {{- end }}
                          {{- end }}
                        labels:
                          {{- range $key, $value := .metadata.labels }}
                          {{- if or (hasPrefix "device.tailscale.com" $key) (hasPrefix "tag.device.tailscale.com" $key) }}
                          {{ $key }}: {{ $value | quote }}
                          {{- end }}
                          {{- end }}
                      name: {{ .name | quote }}
                      nameNormalized: {{ .nameNormalized | quote }}
                      nameRFC1123: {{ regexReplaceAll "[^a-zA-Z0-9_-]" .name "-" | quote }}
                      project: {{ .project | quote }}
                      server: {{ .server | quote }}
                  - op: add
                    path: /spec/template/metadata/labels
                    value: {}
                  - op: add
                    path: /spec/template/metadata/labels/argocd.argoproj.io~1cluster
                    value: {{ .name | quote }}
                target:
                  kind: ApplicationSet

              # This configuration ensures that the server field is set with the
              # cluster server URL for all applications.
              - patch: |
                  - op: add
                    path: /spec/destination/server
                    value: {{ .server | quote }}
                  - op: add
                    path: /metadata/labels
                    value: {}
                  - op: add
                    path: /metadata/labels/argocd.argoproj.io~1cluster
                    value: {{ .name | quote }}
                target:
                  kind: Application

              # These configuration ensures that the appropriate override values files are applied based
              # on the metadata of each cluster. This allows for consistent and automated deployment of
              # applications tailored to the specific requirements of each cluster environment.

              # - Cert-Manager
              - patch: |
                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ .name }}/src/infrastructure/kubernetes/cert-manager/override.helmvalues.yaml
                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}/src/infrastructure/kubernetes/cert-manager/override.helmvalues.yaml
                target:
                  kind: Application
                  name: cert-manager

              # - External-Secrets
              - patch: |
                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ .name }}/src/infrastructure/kubernetes/external-secrets/override.helmvalues.yaml
                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}/src/infrastructure/kubernetes/external-secrets/override.helmvalues.yaml
                target:
                  kind: Application
                  name: external-secrets

              - patch: |
                  - op: add
                    path: /spec/sources/0/kustomize/patches
                    value:
                      - patch: |-
                          - op: add
                            path: /spec/provider/vault/auth/kubernetes/mountPath
                            value: {{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}
                          - op: add
                            path: /spec/provider/vault/auth/kubernetes/role
                            value: {{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}-eso-role
                        target:
                          kind: ClusterSecretStore
                          name: vault.chezmoi.sh
                target:
                  kind: Application
                  name: external-secrets

              # - Tailscale
              - patch: |
                  - op: add
                    path: /spec/sources/0/kustomize/components
                    value:
                      # TODO: ignoreMissingComponents not released yet... required to ignore components that are not available
                      # - ../../../../projects/{{ .name }}/src/infrastructure/kubernetes/tailscale
                      - ../../../../projects/{{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}/src/infrastructure/kubernetes/tailscale


                  - op: add
                    path: /spec/sources/0/kustomize/patches
                    value:
                      - patch: |-
                          - op: add
                            path: /spec/data/0/remoteRef/key
                            value: cloud-tailscale-{{ regexReplaceAll "[^a-zA-Z0-9]" (index .metadata.annotations "device.tailscale.com/hostname" | default .name) "" }}-tsoperator
                          - op: add
                            path: /spec/data/1/remoteRef/key
                            value: cloud-tailscale-{{ regexReplaceAll "[^a-zA-Z0-9]" (index .metadata.annotations "device.tailscale.com/hostname" | default .name) "" }}-tsoperator
                        target:
                          kind: ExternalSecret
                          name: operator-oauth
                      - patch: |-
                          - op: add
                            path: /metadata/annotations/tailscale.com~1hostname
                            value: nameserver-{{ regexReplaceAll "[^a-zA-Z0-9]" (index .metadata.annotations "device.tailscale.com/hostname" | default .name) "" }}
                        target:
                          kind: Service
                          name: nameserver

                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ .name }}/src/infrastructure/kubernetes/tailscale/override.helmvalues.yaml
                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}/src/infrastructure/kubernetes/tailscale/override.helmvalues.yaml

                  - op: add
                    path: /spec/sources/1/helm/valuesObject
                    value:
                      operatorConfig:
                        hostname: {{ regexReplaceAll "[^a-zA-Z0-9]" (index .metadata.annotations "device.tailscale.com/hostname" | default .name) "-" | quote }}
                target:
                  kind: Application
                  name: tailscale

              # - Envoy Gateway
              - patch: |
                  - op: add
                    path: /spec/sources/0/kustomize/components
                    value:
                      - ../../../../projects/{{ .name }}/src/infrastructure/kubernetes/envoy-gateway
                      - ../../../../projects/{{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}/src/infrastructure/kubernetes/envoy-gateway

                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ .name }}/src/infrastructure/kubernetes/envoy-gateway/override.helmvalues.yaml
                  - op: add
                    path: /spec/sources/1/helm/valueFiles/-
                    value: $origin/projects/{{ index .metadata.annotations "device.tailscale.com/hostname" | default .name }}/src/infrastructure/kubernetes/envoy-gateway/override.helmvalues.yaml
                target:
                  kind: Application
                  name: envoy-gateway

      syncPolicy:
        automated:
          prune: false
          selfHeal: false
        syncOptions:
          - CreateNamespace=true
          - Delete=confirm
          - Prune=confirm
          - ServerSideApply=true
  templatePatch: |
    {{ if index .metadata.annotations "device.tailscale.com/address" }}
    metadata:
      annotations:
        link.argocd.argoproj.io/external-link: https://login.tailscale.com/admin/machines/{{ index .metadata.annotations "device.tailscale.com/address" }}
    {{ end }}
