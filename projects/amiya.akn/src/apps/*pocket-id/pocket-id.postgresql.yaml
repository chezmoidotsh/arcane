---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: pocket-id-database
  name: pocket-id-database
spec:
  backup:
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      destinationPath: s3://cnpg-backups/amiya.akn/pocket-id
      endpointURL: https://s3.chezmoi.sh:9000
      serverName: 01K4FKNS9PCXF59H3VC3FTVGJQ # DRP::dst_ulid
      s3Credentials:
        accessKeyId:
          name: pocket-id-database-backup-credentials
          key: access_key_id
        secretAccessKey:
          name: pocket-id-database-backup-credentials
          key: access_secret_key
      wal:
        compression: bzip2
    retentionPolicy: 30d
  bootstrap:
    # initdb:
    #   database: pocket_id
    #   owner: pocket_id
    recovery:
      source: recoveryBackup
  description: PostgreSQL database dedicated to pocket-id
  externalClusters:
    - name: recoveryBackup
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: 01K425MNC1RRVPENV6ZFPB15MQ # DRP::src_ulid
  instances: 1
  managed:
    roles:
      - name: pocket_id
        connectionLimit: -1
        comment: PostgreSQL role for pocket_id
        ensure: present
        inherit: true
        login: true
        passwordSecret:
          name: pocket-id-database-pocket-id
  storage:
    size: 1Gi
  walStorage:
    size: 5Gi

  # Restore all data from legacy cluster present in the sso namespace
  externalClusters:
  - name: legacy-database
    plugin:
      name: barman-cloud.cloudnative-pg.io
      parameters:
        barmanObjectName: selfhosted
        serverName: 01K4FKNS9PCXF59H3VC3FTVGJQ
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  labels:
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: pocket-id
  name: pocket-id
spec:
  schedule: "@daily"
  backupOwnerReference: cluster
  cluster:
    name: pocket-id
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: pocket-id-database-pocket-id
spec:
  data:
    - secretKey: postgresql_username
      remoteRef:
        key: amiya.akn/pocket-id/database/postgresql
        property: username
    - secretKey: postgresql_password
      remoteRef:
        key: amiya.akn/pocket-id/database/postgresql
        property: password
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault.chezmoi.sh
  target:
    template:
      data:
        username: pocket_id
        password: "{{ .postgresql_password }}"
        uri: postgresql://pocket_id:{{ .postgresql_password }}@pocket-id-database-rw.sso:5432/pocket_id
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: pocket-id-database-backup-credentials
spec:
  dataFrom:
    - extract:
        key: shared/third-parties/chezmoi.sh/s3/amiya.akn/cnpg-backup
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault.chezmoi.sh
