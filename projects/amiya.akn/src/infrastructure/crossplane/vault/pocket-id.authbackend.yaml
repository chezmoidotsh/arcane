---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: pocket-id-client-secret
spec:
  secretStoreRef:
    name: vault.chezmoi.sh
    kind: ClusterSecretStore
  data:
    - secretKey: client_secret
      remoteRef:
        key: amiya.akn/openbao/auth/pocket-id-oidc-client
        property: client_secret
---
apiVersion: jwt.vault.upbound.io/v1alpha1
kind: AuthBackend
metadata:
  annotations:
    crossplane.io/external-name: pocket-id
  name: pocket-id
spec:
  forProvider:
    description: pocket-id sso auth backend for UI/CLI user authentication
    type: oidc
    path: pocket-id

    # OIDC configuration
    boundIssuer: https://sso.chezmoi.sh
    defaultRole: default
    oidcClientId: 8efdd355-7697-4748-83ba-79889cc01d5f
    oidcClientSecretSecretRef:
      name: pocket-id-client-secret
      namespace: crossplane
      key: client_secret
    oidcDiscoveryUrl: https://sso.chezmoi.sh

    # Tune configuration
    tune:
      - defaultLeaseTtl: 15m
        listingVisibility: unauth
        maxLeaseTtl: 2h
        tokenType: default-service # no secret here
---
apiVersion: jwt.vault.upbound.io/v1alpha1
kind: AuthBackendRole
metadata:
  name: pocket-id-default
spec:
  forProvider:
    allowedRedirectUris:
      - http://localhost:8250/oidc/callback
      - https://vault.chezmoi.sh/ui/vault/auth/pocket-id/oidc/callback
    backendRef:
      name: pocket-id
    roleName: default

    # OIDC & claims configuration
    oidcScopes: [openid, email, groups]
    groupsClaim: groups
    userClaim: sub
    claimMappings:
      email: email

    # Policies configuration
    tokenPolicies:
      - default
      - personal-user-access
---
apiVersion: jwt.vault.upbound.io/v1alpha1
kind: AuthBackendRole
metadata:
  name: pocket-id-admin
spec:
  forProvider:
    allowedRedirectUris:
      - http://localhost:8250/oidc/callback
      - https://vault.chezmoi.sh/ui/vault/auth/pocket-id/oidc/callback
      - https://vault.tail831c5d.ts.net/ui/vault/auth/pocket-id/oidc/callback
    backendRef:
      name: pocket-id
    roleName: admin

    # OIDC & claims configuration
    oidcScopes: [openid, email, groups]
    groupsClaim: groups
    userClaim: sub
    claimMappings:
      email: email
    boundClaims:
      groups: admin

    # Policies configuration
    tokenPolicies:
      - default
      - sso-admin-policy
      - personal-admin-access
