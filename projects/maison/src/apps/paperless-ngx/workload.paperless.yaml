---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: webserver
    app.kubernetes.io/instance: paperless-ngx-webserver
  name: paperless-ngx
  namespace: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: paperless-ngx-webserver
  serviceName: paperless-ngx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webserver
        app.kubernetes.io/instance: paperless-ngx-webserver
        network-policy.k8s.io/allow-to-kubernetes-dns: "true"
    spec:
      automountServiceAccountToken: false
      containers:
        # trunk-ignore(trivy/KSV014): some path must be writable by the user ... so this is a TODO to find all writable path
        # trunk-ignore(trivy/KSV020,trivy/KSV021): unfortunately, the official image is difficult to run with a custom user ID
        # trunk-ignore(trivy/KSV022): add CHOWN capability is required by the official image
        - name: paperless-ngx
          env:
            - name: PAPERLESS_APPS
              value: allauth.socialaccount.providers.openid_connect
            - name: PAPERLESS_CONSUMER_POLLING
              value: "60"
            - name: PAPERLESS_CORS_ALLOWED_HOSTS
              value: https://paperless-ngx.chezmoi.sh,https://paperless-ngx.tail25fed.ts.net,https://paperless-ngx
            - name: PAPERLESS_CSRF_TRUSTED_ORIGINS
              value: https://paperless-ngx.chezmoi.sh,https://paperless-ngx.tail25fed.ts.net,https://paperless-ngx
            - name: PAPERLESS_DBENGINE
              value: postgresql
            - name: PAPERLESS_DBHOST
              valueFrom:
                secretKeyRef:
                  name: paperless-ngx-database-app
                  key: host
            - name: PAPERLESS_DBNAME
              valueFrom:
                secretKeyRef:
                  name: paperless-ngx-database-app
                  key: dbname
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: paperless-ngx-database-app
                  key: password
            - name: PAPERLESS_DBPORT
              valueFrom:
                secretKeyRef:
                  name: paperless-ngx-database-app
                  key: port
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  name: paperless-ngx-database-app
                  key: user
            - name: PAPERLESS_REDIS
              value: redis://paperless-ngx-redis:6379
            - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              valueFrom:
                secretKeyRef:
                  name: paperless-ngx-oidc-credentials
                  key: socialaccount_providers
          image: ghcr.io/paperless-ngx/paperless-ngx:2.13.5@sha256:199c67ed55bfb9d58bf90db2ee280880ae9ebc63413e54c73522f9c4ebdc7bad
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              memory: 4Gi
              cpu: 250m
            limits:
              memory: 4Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              # trunk-ignore(trivy/KSV106): add CHOWN capability is required by the official image
              add:
                - CHOWN # required by the official image
              drop:
                - ALL
            readOnlyRootFilesystem: false # required by the official image because of the logs ...
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: media
              mountPath: /usr/src/paperless/media
            - name: data
              mountPath: /usr/src/paperless/data
            - name: public
              mountPath: /usr/src/paperless/media/documents/archive/nas.chezmoi.sh/Public
              subPath: Documents
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: data
          persistentVolumeClaim:
            claimName: media
        - name: public
          persistentVolumeClaim:
            claimName: paperless-ngx-smb-archive
  volumeClaimTemplates:
    - metadata:
        name: media
        labels:
          app.kubernetes.io/component: webserver
          app.kubernetes.io/instance: paperless-ngx-webserver
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
    - metadata:
        name: data
        labels:
          app.kubernetes.io/component: webserver
          app.kubernetes.io/instance: paperless-ngx-webserver
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webserver
    app.kubernetes.io/instance: paperless-ngx-webserver
  name: paperless-ngx
  namespace: paperless-ngx
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/instance: paperless-ngx-webserver
  type: ClusterIP
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: paperless-ngx-oidc-credentials
  namespace: paperless-ngx
spec:
  data:
    - remoteRef:
        key: security-sso-oidc-clients-paperless-ngx
        property: oidc_configuration
      secretKey: oidc_configuration
  secretStoreRef:
    kind: ClusterSecretStore
    name: kubernetes.maison.chezmoi.sh
  target:
    name: paperless-ngx-oidc-credentials
    template:
      type: Opaque
      engineVersion: v2
      data:
        socialaccount_providers: |
          {
            "openid_connect": {
              "APPS": [
                {
                  "provider_id": "sso",
                  "name": "Authelia",
                  "client_id": "{{ regexReplaceAll "client_id: (.+?)" (.oidc_configuration | split "\n")._1 "${1}" }}",
                  "secret": "{{ regexReplaceAll "# client_secret: (.+?)" (.oidc_configuration | split "\n")._3 "${1}" }}",
                  "settings": {
                    "server_url": "https://auth.chezmoi.sh/.well-known/openid-configuration"
                  }
                }
              ],
              "OAUTH_PKCE_ENABLED": "True"
            }
          }
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: paperless-ngx-smb-credentials
  namespace: paperless-ngx
spec:
  data:
    - remoteRef:
        key: storage-smb-paperless-ngx
        property: username
      secretKey: username
    - remoteRef:
        key: storage-smb-paperless-ngx
        property: password
      secretKey: password
  secretStoreRef:
    kind: ClusterSecretStore
    name: kubernetes.maison.chezmoi.sh
  target:
    name: paperless-ngx-smb-credentials
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-smb-archive
  namespace: paperless-ngx
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: smb
  volumeName: paperless-ngx-smb-archive
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: smb.csi.k8s.io
  name: paperless-ngx-smb-archive
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: smb
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=1000
    - gid=1000
    - noperm
    - mfsymlinks
    - cache=strict
    - noserverino # required to prevent data corruption
  csi:
    driver: smb.csi.k8s.io
    # volumeHandle format: {smb-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: smb-server.default.svc.cluster.local/share##
    volumeAttributes:
      source: //nas.chezmoi.sh/Public
    nodeStageSecretRef:
      name: paperless-ngx-smb-credentials
      namespace: paperless-ngx
