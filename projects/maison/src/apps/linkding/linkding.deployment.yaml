# trunk-ignore-all(trivy/KSV104): Everything about security context cannot be configured for the official image.
---
# trunk-ignore(checkov/CKV_K8S_11): DO NOT SET the CPU limit
# trunk-ignore(checkov/CKV_K8S_20,checkov/CKV_K8S_22,checkov/CKV_K8S_23,checkov/CKV_K8S_28,checkov/CKV_K8S_29,checkov/CKV_K8S_30,checkov/CKV_K8S_31,checkov/CKV_K8S_37,checkov/CKV_K8S_40): Everything about security context cannot be configured for the official image.
# trunk-ignore(checkov/CKV_K8S_15,checkov/CKV_K8S_43): Not aggreed with theses policies about the ImagePullPolicy=Always and digest verification.
# trunk-ignore(checkov/CKV_K8S_35): Linkding cannot be configured using a file.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkding
  namespace: linkding
  labels:
    app.kubernetes.io/name: linkding
    app.kubernetes.io/instance: linkding
    app.kubernetes.io/part-of: linkding
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: linkding
      app.kubernetes.io/instance: linkding
  template:
    metadata:
      labels:
        app.kubernetes.io/name: linkding
        app.kubernetes.io/instance: linkding
    spec:
      automountServiceAccountToken: false
      containers:
        # trunk-ignore(trivy): Everything about security context cannot be configured for the official image.
        - name: linkding
          env:
            - name: LD_DB_ENGINE
              value: postgres
            - name: LD_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: linkding-database-app
                  key: dbname
            - name: LD_DB_USER
              valueFrom:
                secretKeyRef:
                  name: linkding-database-app
                  key: user
            - name: LD_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: linkding-database-app
                  key: password
            - name: LD_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: linkding-database-app
                  key: host

            - name: LD_ENABLE_OIDC
              value: "True"
            - name: OIDC_OP_AUTHORIZATION_ENDPOINT
              value: https://auth.chezmoi.sh/api/oidc/authorization
            - name: OIDC_OP_TOKEN_ENDPOINT
              value: https://auth.chezmoi.sh/api/oidc/token
            - name: OIDC_OP_USER_ENDPOINT
              value: https://auth.chezmoi.sh/api/oidc/userinfo
            - name: OIDC_OP_JWKS_ENDPOINT
              value: https://auth.chezmoi.sh/jwks.json
            - name: OIDC_RP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: linkding-oidc-credentials
                  key: oidc_client_id
            - name: OIDC_RP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: linkding-oidc-credentials
                  key: oidc_client_secret

            - name: LD_FAVICON_PROVIDER
              value: https://icons.duckduckgo.com/ip3/{domain}.ico
          image: docker.io/sissbruecker/linkding:1.36.0-alpine
          livenessProbe:
            httpGet:
              path: /
              port: http
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              memory: 512Mi
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: linkding-oidc-credentials
  namespace: linkding
  labels:
    app.kubernetes.io/name: linkding
    app.kubernetes.io/instance: linkding
    app.kubernetes.io/part-of: linkding
spec:
  data:
    - remoteRef:
        key: security-sso-oidc-clients-linkding
        property: oidc_configuration
      secretKey: oidc_configuration
  secretStoreRef:
    kind: ClusterSecretStore
    name: kubernetes.maison.chezmoi.sh
  target:
    name: linkding-oidc-credentials
    template:
      type: Opaque
      engineVersion: v2
      data:
        oidc_client_id: >-
          {{ regexReplaceAll "client_id: (.+?)" (.oidc_configuration | split "\n")._1 "${1}" }}
        oidc_client_secret: >-
          {{ regexReplaceAll "# client_secret: (.+?)" (.oidc_configuration | split "\n")._3 "${1}" }}
---
apiVersion: v1
kind: Service
metadata:
  name: linkding
  namespace: linkding
  labels:
    app.kubernetes.io/name: linkding
    app.kubernetes.io/instance: linkding
    app.kubernetes.io/part-of: linkding
spec:
  selector:
    app.kubernetes.io/name: linkding
    app.kubernetes.io/instance: linkding
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: linkding
  namespace: linkding
  labels:
    app.kubernetes.io/name: linkding
    app.kubernetes.io/instance: linkding
    app.kubernetes.io/part-of: linkding
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: linkding
      app.kubernetes.io/instance: linkding
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: traefik-system
  egress:
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 443
    - to:
        - podSelector: {}
